[1,["ecpdLyjvZBwrvm+cedCcQy","e7q6FL+VZEgLJUjVeDLic/","29FYIk+N1GYaeWH/q1NxQO","312JYturtOx74Zjp9UpOqZ","a45JoapiNI56cXcNgd59jO","f0BIwQ8D5Ml7nTNQbh1YlS","a2MjXRFdtLlYQ5ouAFv/+R","e97GVMl6JHh5Ml5qEDdSGa","ba8DOZ65hCoLMjlrB9uAXO","e14ywBHwZJcr/FRS0HjVUw","51G9SFnNJGwbW4ktM4J9aL","5fbExhsYdM7LUnfe/egOSd","71VhFCTINJM6/Ky3oX9nBT","02kcE0s9pAmLe145ftvpR/","7c829vZ91Pcb/NJLuDsL6x","8dHRMG+4VMjLYEp6iwRhkQ","02delMVqdBD70a/HSD99FK","72bp+KUGJH1555tU98sn8H","59htMhGU1ES7nrzb4yioG0","69NO1zmqBP741468Ewde69","56fc2Ai/RFNYpaMT8crweK","b4P/PCArtIdIH38t6mlw8Y","e8Ueib+qJEhL6mXAHdnwbi"],["node","_spriteFrame","_textureSetter","_N$normalSprite","_N$pressedSprite","_N$hoverSprite","_N$disabledSprite","_N$handle","_normalMaterial","_parent","innerGlowChildren","scene","_effectAsset"],["cc.SpriteFrame",["cc.Node",["_name","_objFlags","_id","_components","_contentSize","_parent","_trs","_children","_color"],0,9,5,1,7,2,5],["cc.Sprite",["_sizeMode","_type","node","_materials","_spriteFrame"],1,1,3,6],["cc.Widget",["_alignFlags","alignMode","_originalWidth","_originalHeight","node"],-1,1],["cc.Slider",["_N$progress","node","_N$handle"],2,1,1],["cc.Button",["_N$transition","zoomScale","_N$enableAutoGrayEffect","node","_N$pressedColor","_N$disabledColor","_N$target","_N$normalColor","_N$normalSprite","_N$pressedSprite","_N$hoverSprite","_N$disabledSprite"],0,1,5,5,1,5,6,6,6,6],["cc.Label",["_string","_N$horizontalAlign","_N$verticalAlign","_fontSize","_enableWrapText","_N$overflow","_N$cacheMode","node","_materials"],-4,1,3],["cc.SceneAsset",["_name","asyncLoadAssets"],1],["cc.Node",["_name","_objFlags","_parent","_components","_contentSize","_trs"],1,1,12,5,7],["cc.Canvas",["node"],3,1],["6afa04W/R9AYJzcWkEOhYpE",["node","innerGlowChildren"],3,1,1],["cc.Scene",["_name","_children","_anchorPoint","_trs"],2,2,5,7],["cc.Camera",["_clearFlags","_depth","node"],1,1],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Material",["_name","_techniqueData"],1]],[[1,0,5,3,4,6,2],[2,1,0,2,3,4,3],[6,0,1,2,7,8,4],[1,0,5,7,3,4,6,2],[1,0,1,5,3,4,3],[8,0,1,2,3,4,5,3],[5,1,2,0,3,4,5,6,4],[4,0,1,2,2],[2,2,3,4,1],[2,0,2,3,4,2],[7,0,1,3],[1,0,2,7,3,4,6,3],[1,0,2,7,6,3],[1,0,1,7,3,4,3],[1,0,5,3,8,4,2],[1,0,1,5,3,8,4,3],[1,0,5,3,8,4,6,2],[9,0,1],[3,0,4,2],[3,1,0,2,3,4,5],[10,0,1,1],[4,1,2,1],[11,0,1,2,3,2],[5,0,3,7,4,5,6,8,9,10,11,2],[12,0,1,2,3],[6,0,3,4,1,2,5,6,7,8,8],[13,0,1,2,4],[14,0,1,3]],[[[[10,"innerGlow",null],[11,"Canvas","a5esZu+45LA5mBpvttspPD",[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15],[[17,-1],[18,45,-2],[20,-4,-3]],[5,960,640],[480,320,0,0,0,0,1,1,1,1]],[12,"innerGlowChildren","e0G+C5TUFJXZb3xfKsi6R8",[-16,-17,-18,-19,-20],[710.344,456.14,0,0,0,0,1,1,1,0.2]],[13,"Background",512,[-23],[[1,1,0,-21,[3],4],[19,0,45,100,40,-22]],[5,100,40]],[3,"width",1,[-26,-27,-28],[[21,-25,-24]],[5,300,20],[-152.683,-136.145,0,0,0,0,1,1,1,1]],[3,"threshold",1,[-31,-32,-33],[[7,0.1,-30,-29]],[5,300,20],[-154,-52.053,0,0,0,0,1,1,1,1]],[3,"r",1,[-36,-37,-38],[[7,1,-35,-34]],[5,300,20],[-152.683,261.449,0,0,0,0,1,1,1,1]],[3,"a",1,[-41,-42,-43],[[7,1,-40,-39]],[5,300,20],[-154.958,33.853,0,0,0,0,1,1,1,1]],[3,"b",1,[-46,-47,-48],[[7,0,-45,-44]],[5,300,20],[-154.958,115.846,0,0,0,0,1,1,1,1]],[3,"g",1,[-51,-52,-53],[[7,1,-50,-49]],[5,300,20],[-157.832,189.119,0,0,0,0,1,1,1,1]],[5,"Handle",512,4,[[[1,1,2,-54,[11],12],-55],4,1],[5,32,32],[0,0,0,0,0,0,1,1,1,0]],[5,"Handle",512,5,[[[1,1,2,-56,[16],17],-57],4,1],[5,32,32],[-120,0,0,0,0,0,1,1,1,0]],[5,"Handle",512,6,[[[1,1,2,-58,[21],22],-59],4,1],[5,32,32],[150,0,0,0,0,0,1,1,1,0]],[5,"Handle",512,7,[[[1,1,2,-60,[26],27],-61],4,1],[5,32,32],[150,0,0,0,0,0,1,1,1,0]],[5,"Handle",512,8,[[[1,1,2,-62,[31],32],-63],4,1],[5,32,32],[-150,0,0,0,0,0,1,1,1,0]],[5,"Handle",512,9,[[[1,1,2,-64,[36],37],-65],4,1],[5,32,32],[150,0,0,0,0,0,1,1,1,0]],[22,"New Node",[1,2],[0,0,0],[0,0,0,0,0,0,1,1,1,1]],[3,"backHome",1,[3],[[23,2,-66,[4,4293322470],[4,4291348680],[4,3363338360],3,5,6,7,8]],[5,100,40],[396.011,-260.236,0,0,0,0,1,1,1,1]],[0,"Main Camera",1,[[24,7,-1,-67]],[5,960,640],[0,0,357.88499811391927,0,0,0,1,1,1,1]],[14,"background",1,[[9,0,-68,[0],1]],[4,4280624422],[5,960,640]],[15,"Label",512,3,[[25,"Home",20,false,1,1,1,1,-69,[2]]],[4,4278190080],[5,100,40]],[4,"Background",512,4,[[1,1,0,-70,[9],10]],[5,300,20]],[6,1.1,true,3,10,[4,4294967295],[4,4294967295],10],[0,"New Label",4,[[2,"Label",1,1,-71,[13]]],[5,97.87,50.4],[206.731,0,0,0,0,0,1,1,1,1]],[4,"Background",512,5,[[1,1,0,-72,[14],15]],[5,300,20]],[6,1.1,true,3,11,[4,4294967295],[4,4294967295],11],[0,"New Label",5,[[2,"Label",1,1,-73,[18]]],[5,97.87,50.4],[206.731,0,0,0,0,0,1,1,1,1]],[4,"Background",512,6,[[1,1,0,-74,[19],20]],[5,300,20]],[6,1.1,true,3,12,[4,4294967295],[4,4294967295],12],[0,"New Label",6,[[2,"Label",1,1,-75,[23]]],[5,97.87,50.4],[209.887,0,0,0,0,0,1,1,1,1]],[4,"Background",512,7,[[1,1,0,-76,[24],25]],[5,300,20]],[6,1.1,true,3,13,[4,4294967295],[4,4294967295],13],[0,"New Label",7,[[2,"Label",1,1,-77,[28]]],[5,97.87,50.4],[211.465,0,0,0,0,0,1,1,1,1]],[4,"Background",512,8,[[1,1,0,-78,[29],30]],[5,300,20]],[6,1.1,true,3,14,[4,4294967295],[4,4294967295],14],[0,"New Label",8,[[2,"Label",1,1,-79,[33]]],[5,97.87,50.4],[211.466,0,0,0,0,0,1,1,1,1]],[4,"Background",512,9,[[1,1,0,-80,[34],35]],[5,300,20]],[6,1.1,true,3,15,[4,4294967295],[4,4294967295],15],[0,"New Label",9,[[2,"Label",1,1,-81,[38]]],[5,97.87,50.4],[213.043,0,0,0,0,0,1,1,1,1]],[0,"tip",1,[[2,"r\n\ng\n\nb\n\na\n\n发光阈值\n\n发光范围",1,1,-82,[39]]],[5,160,450.4],[-391.356,68.149,0,0,0,0,1,1,1,1]],[0,"New Label",1,[[2,"内发光/流光展示",1,1,-83,[40]]],[5,291.11,50.4],[0,-260.921,0,0,0,0,1,1,1,1]],[0,"cocos_logo",2,[[8,-84,[41],42]],[5,195,270],[137.649,41.474,0,0,0,0,1,1,1,1]],[0,"ball_1",2,[[9,0,-85,[43],44]],[5,60,60],[-28.287,-129.534,0,0,0,0,1,2,2,1]],[0,"sushi_1",2,[[8,-86,[45],46]],[5,639,287],[-542.606,-369.035,0,0,0,0,1,0.4,0.4,1]],[0,"shark_1",2,[[8,-87,[47],48]],[5,553,471],[79.459,-250.412,0,0,0,0,1,0.5,0.5,1]],[16,"New Label",2,[[2,"Label",1,1,-88,[49]]],[4,4278190335],[5,97.87,50.4],[-182.179,-330.734,0,0,0,0,1,1,1,1]]],0,[0,0,1,0,0,1,0,10,2,0,0,1,0,-1,18,0,-2,19,0,-3,17,0,-4,4,0,-5,5,0,-6,6,0,-7,7,0,-8,8,0,-9,9,0,-10,39,0,-11,40,0,-1,41,0,-2,42,0,-3,43,0,-4,44,0,-5,45,0,0,3,0,0,3,0,-1,20,0,7,22,0,0,4,0,-1,21,0,-2,10,0,-3,23,0,7,25,0,0,5,0,-1,24,0,-2,11,0,-3,26,0,7,28,0,0,6,0,-1,27,0,-2,12,0,-3,29,0,7,31,0,0,7,0,-1,30,0,-2,13,0,-3,32,0,7,34,0,0,8,0,-1,33,0,-2,14,0,-3,35,0,7,37,0,0,9,0,-1,36,0,-2,15,0,-3,38,0,0,10,0,-2,22,0,0,11,0,-2,25,0,0,12,0,-2,28,0,0,13,0,-2,31,0,0,14,0,-2,34,0,0,15,0,-2,37,0,0,17,0,0,18,0,0,19,0,0,20,0,0,21,0,0,23,0,0,24,0,0,26,0,0,27,0,0,29,0,0,30,0,0,32,0,0,33,0,0,35,0,0,36,0,0,38,0,0,39,0,0,40,0,0,41,0,0,42,0,0,43,0,0,44,0,0,45,0,11,16,1,9,16,2,9,16,3,9,17,88],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,22,22,22,22,25,25,25,25,25,28,28,28,28,28,31,31,31,31,31,34,34,34,34,34,37,37,37,37,37],[-1,1,-1,-1,1,3,4,5,6,-1,1,-1,1,-1,-1,1,-1,1,-1,-1,1,-1,1,-1,-1,1,-1,1,-1,-1,1,-1,1,-1,-1,1,-1,1,-1,-1,-1,-1,1,-1,1,-1,1,-1,1,-1,8,3,4,5,6,8,3,4,5,6,8,3,4,5,6,8,3,4,5,6,8,3,4,5,6,8,3,4,5,6],[0,6,0,0,5,5,7,5,2,0,3,0,1,0,0,3,0,1,0,0,3,0,1,0,0,3,0,1,0,0,3,0,1,0,0,3,0,1,0,0,0,4,8,4,9,4,10,4,11,4,0,1,1,1,2,0,1,1,1,2,0,1,1,1,2,0,1,1,1,2,0,1,1,1,2,0,1,1,1,2]],[[{"name":"default_btn_disabled","rect":[0,0,40,40],"offset":[0,0],"originalSize":[40,40],"capInsets":[12,12,12,12]}],[0],0,[0],[2],[12]],[[{"name":"default_scrollbar","rect":[0,0,30,15],"offset":[0,0],"originalSize":[30,15],"capInsets":[10,4,10,4]}],[0],0,[0],[2],[13]],[[{"name":"sushi_1","rect":[1,20,639,287],"offset":[0.5,-3.5],"originalSize":[640,320],"capInsets":[0,0,0,0]}],[0],0,[0],[2],[14]],[[{"name":"shark_1","rect":[49,4,553,471],"offset":[5.5,0.5],"originalSize":[640,480],"capInsets":[0,0,0,0]}],[0],0,[0],[2],[15]],[[[26,"innerGlow",[{"hash":62734728,"record":null,"name":"innerGlow|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\n#if SHOW_INNER_GLOW\nuniform glow {\n  vec4 glowColor;\n  float spriteWidth;\n  float spriteHeight;\n  float glowRange;\n  float glowThreshold;\n};\nvec4 getTextureColor(sampler2D texture, vec2 v_uv0) {\n  if (v_uv0.x > 1.0 || v_uv0.x < 0.0 || v_uv0.y > 1.0 || v_uv0.y < 0.0) {\n    return vec4(0.0, 0.0, 0.0, 0.0);\n  }\n  return texture(texture, v_uv0);\n}\nfloat getGlowAlpha() {\n  if(glowRange == 0.0) {\n    return 0.0;\n  }\n  vec4 srcColor = getTextureColor(texture, v_uv0);\n  if (srcColor.a <= glowThreshold) {\n    return srcColor.a;\n  }\n  float per_step_x = (1.0 ) * (glowRange / 5.0);\n  float per_step_y = (1.0 ) * (glowRange / 5.0);\n  float totalAlpha = 0.0;\n  for (float x = -5.0; x <= 5.0; x++) {\n    for (float y = -5.0; y <= 5.0; y++) {\n      totalAlpha += getTextureColor(texture, v_uv0 + vec2(x * per_step_x, y * per_step_y)).a;\n    }\n  }\n  totalAlpha /= (5.0 + 5.0 + 1.0) * (5.0 + 5.0 + 1.0);\n  return totalAlpha;\n}\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  o *= v_color;\n  ALPHA_TEST(o);\n  gl_FragColor = o;\n  #if SHOW_INNER_GLOW\n    vec4 color_dest = o;\n    float alpha = getGlowAlpha();\n    if (alpha > glowThreshold) {\n      alpha = 1.0 - alpha;\n      alpha = -1.0 * pow((alpha - 1.0), 4.0) + 1.0;\n    }\n    vec4 color_src = glowColor * alpha;\n    gl_FragColor = color_dest + color_src * color_src.a;\n    #endif\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\n#if SHOW_INNER_GLOW\nuniform vec4 glowColor;\nuniform float glowRange;\nuniform float glowThreshold;\nvec4 getTextureColor(sampler2D texture, vec2 v_uv0) {\n  if (v_uv0.x > 1.0 || v_uv0.x < 0.0 || v_uv0.y > 1.0 || v_uv0.y < 0.0) {\n    return vec4(0.0, 0.0, 0.0, 0.0);\n  }\n  return texture2D(texture, v_uv0);\n}\nfloat getGlowAlpha() {\n  if(glowRange == 0.0) {\n    return 0.0;\n  }\n  vec4 srcColor = getTextureColor(texture, v_uv0);\n  if (srcColor.a <= glowThreshold) {\n    return srcColor.a;\n  }\n  float per_step_x = (1.0 ) * (glowRange / 5.0);\n  float per_step_y = (1.0 ) * (glowRange / 5.0);\n  float totalAlpha = 0.0;\n  for (float x = -5.0; x <= 5.0; x++) {\n    for (float y = -5.0; y <= 5.0; y++) {\n      totalAlpha += getTextureColor(texture, v_uv0 + vec2(x * per_step_x, y * per_step_y)).a;\n    }\n  }\n  totalAlpha /= (5.0 + 5.0 + 1.0) * (5.0 + 5.0 + 1.0);\n  return totalAlpha;\n}\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture2D(texture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  o *= v_color;\n  ALPHA_TEST(o);\n  gl_FragColor = o;\n  #if SHOW_INNER_GLOW\n    vec4 color_dest = o;\n    float alpha = getGlowAlpha();\n    if (alpha > glowThreshold) {\n      alpha = 1.0 - alpha;\n      alpha = -1.0 * pow((alpha - 1.0), 4.0) + 1.0;\n    }\n    vec4 color_src = glowColor * alpha;\n    gl_FragColor = color_dest + color_src * color_src.a;\n    #endif\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"SHOW_INNER_GLOW","type":"boolean","defines":[]},{"name":"CC_USE_ALPHA_ATLAS_texture","type":"boolean","defines":["USE_TEXTURE"]},{"name":"INPUT_IS_GAMMA","type":"boolean","defines":["USE_TEXTURE"]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"glow","binding":1,"members":[{"name":"glowColor","type":16,"count":1},{"name":"spriteWidth","type":13,"count":1},{"name":"spriteHeight","type":13,"count":1},{"name":"glowRange","type":13,"count":1},{"name":"glowThreshold","type":13,"count":1}],"defines":["SHOW_INNER_GLOW"]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"innerGlow|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.5]},"glowColor":{"type":16,"value":[1,1,0,1],"editor":{"type":"color","tooltip":"发光颜色（RGBA）"}},"spriteWidth":{"type":13,"value":[500],"editor":{"tooltip":"纹理宽度（px）"}},"spriteHeight":{"type":13,"value":[500],"editor":{"tooltip":"纹理高度（px）"}},"glowRange":{"type":13,"value":[0.1],"editor":{"tooltip":"内发光范围","range":[0,1]}},"glowThreshold":{"type":13,"value":[0.1],"editor":{"tooltip":"发光阈值（只有超过这个透明度的点才会发光）","range":[0,1]}}}}]}]]],0,0,[],[],[]],[[{"name":"default_sprite_splash","rect":[0,0,2,2],"offset":[0,0],"originalSize":[2,2],"capInsets":[0,0,0,0]}],[0],0,[0],[2],[16]],[[[27,"innerGlow",{"0":{"props":{"glowThreshold":0.12,"glowRange":0.1},"defines":{"USE_TEXTURE":true,"SHOW_INNER_GLOW":true}}}]],0,0,[0],[12],[17]],[[{"name":"cocos_logo","rect":[0,0,195,270],"offset":[0,0],"originalSize":[195,270],"capInsets":[0,0,0,0]}],[0],0,[0],[2],[18]],[[{"name":"ball_1","rect":[10,10,60,60],"offset":[0,0],"originalSize":[80,80],"capInsets":[0,0,0,0]}],[0],0,[0],[2],[19]],[[{"name":"default_radio_button_off","rect":[3,3,26,26],"offset":[0,0],"originalSize":[32,32],"capInsets":[0,0,0,0]}],[0],0,[0],[2],[20]],[[{"name":"default_btn_pressed","rect":[0,0,40,40],"offset":[0,0],"originalSize":[40,40],"capInsets":[12,12,12,12]}],[0],0,[0],[2],[21]],[[{"name":"default_btn_normal","rect":[0,0,40,40],"offset":[0,0],"originalSize":[40,40],"capInsets":[12,12,12,12]}],[0],0,[0],[2],[22]]]]