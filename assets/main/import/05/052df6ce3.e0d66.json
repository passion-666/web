[1,["ecpdLyjvZBwrvm+cedCcQy","e7q6FL+VZEgLJUjVeDLic/","f0BIwQ8D5Ml7nTNQbh1YlS","29FYIk+N1GYaeWH/q1NxQO","24daDl07xN8q3Xmj+GPr30","71VhFCTINJM6/Ky3oX9nBT","02kcE0s9pAmLe145ftvpR/","02delMVqdBD70a/HSD99FK","56fc2Ai/RFNYpaMT8crweK","b4P/PCArtIdIH38t6mlw8Y","e8Ueib+qJEhL6mXAHdnwbi","a2MjXRFdtLlYQ5ouAFv/+R","01v5oTRdxJi5DaoHzodilI","312JYturtOx74Zjp9UpOqZ","e97GVMl6JHh5Ml5qEDdSGa","fdqO60lyRO7Jye6EQoJ9M4","f1VSJHC01L+5vtd1UogJ8X"],["node","_textureSetter","_spriteFrame","_parent","_N$normalSprite","_N$pressedSprite","_N$hoverSprite","_N$disabledSprite","_effectAsset","slider","tip","img","scene","_normalMaterial"],["cc.SpriteFrame",["cc.Node",["_name","_objFlags","_id","_components","_contentSize","_parent","_children","_trs","_color"],0,9,5,1,2,7,5],["cc.Sprite",["_sizeMode","_type","node","_materials","_spriteFrame"],1,1,3,6],["cc.Node",["_name","_parent","_components","_contentSize","_trs","_children"],2,1,2,5,7,2],["cc.Widget",["_alignFlags","alignMode","_originalWidth","_originalHeight","node"],-1,1],["cc.Button",["_N$transition","zoomScale","_N$enableAutoGrayEffect","node","_N$pressedColor","_N$disabledColor","_N$target","_N$normalColor","_N$normalSprite","_N$pressedSprite","_N$hoverSprite","_N$disabledSprite"],0,1,5,5,1,5,6,6,6,6],["cc.Label",["_string","_N$horizontalAlign","_N$verticalAlign","_fontSize","_enableWrapText","_N$overflow","_N$cacheMode","node","_materials"],-4,1,3],["cc.Material",["_name","_techniqueData"],1],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.SceneAsset",["_name","asyncLoadAssets"],1],["cc.Node",["_name","_objFlags","_parent","_components","_contentSize","_trs"],1,1,12,5,7],["cc.Canvas",["node"],3,1],["81aa16i1xFJwKCSOiUrsGm8",["node","img","tip","slider"],3,1,1,1,1],["cc.Scene",["_name","_children","_anchorPoint","_trs"],2,2,5,7],["cc.Camera",["_clearFlags","_depth","node"],1,1],["cc.Slider",["_N$progress","node","_N$handle"],2,1,1]],[[2,1,0,2,3,4,3],[3,0,1,2,3,4,2],[7,0,1,3],[8,0,1,2,4],[9,0,1,3],[1,0,2,6,3,4,7,3],[1,0,1,6,3,4,3],[1,0,5,6,3,4,7,2],[1,0,5,3,4,7,2],[1,0,5,3,8,4,2],[1,0,1,5,3,4,3],[1,0,1,5,3,8,4,3],[3,0,1,5,2,3,4,2],[10,0,1,2,3,4,5,3],[11,0,1],[4,0,4,2],[4,1,0,2,3,4,5],[12,0,1,2,3,1],[2,0,2,3,4,2],[2,0,2,3,2],[5,0,3,7,4,5,6,8,9,10,11,2],[5,1,2,0,3,4,5,6,4],[13,0,1,2,3,2],[14,0,1,2,3],[6,0,1,2,7,8,4],[6,0,3,4,1,2,5,6,7,8,8],[15,0,1,2,2]],[[[[2,"mosaic",{"0":{"defines":{"USE_TEXTURE":true,"USE_MOSAIC":true},"props":{"xBlockCount":100,"yBlockCount":100}}}]],0,0,[0],[8],[4]],[[[3,"mosaic",[{"hash":2940441317,"record":null,"name":"mosaic|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\n#if USE_MOSAIC\nuniform Mosaic {\n  float xBlockCount;\n  float yBlockCount;\n};\nvec2 getUvMapPos(){\n  float xCount;\n  if(xBlockCount <= 0.0) {\n    xCount = 1.0;\n  } else {\n    xCount = xBlockCount;\n  }\n  float blockWith = 1.0 / xCount;\n  float bolckXIndex = floor(v_uv0.x / blockWith);\n  float yCount;\n  if(yBlockCount <= 0.0) {\n    yCount = 1.0;\n  } else {\n    yCount = yBlockCount;\n  }\n  float blockHeight = 1.0 / yCount;\n  float bolckYIndex = floor(v_uv0.y / blockHeight);\n  return vec2(blockWith * (bolckXIndex + 0.5),blockHeight * (bolckYIndex +0.5));\n}\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  vec2 realPos = v_uv0;\n  #if USE_MOSAIC\n  realPos = getUvMapPos();\n  #endif\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture(texture, realPos);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture(texture, realPos + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  o *= v_color;\n  ALPHA_TEST(o);\n  gl_FragColor = o;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\n#if USE_MOSAIC\nuniform float xBlockCount;\nuniform float yBlockCount;\nvec2 getUvMapPos(){\n  float xCount;\n  if(xBlockCount <= 0.0) {\n    xCount = 1.0;\n  } else {\n    xCount = xBlockCount;\n  }\n  float blockWith = 1.0 / xCount;\n  float bolckXIndex = floor(v_uv0.x / blockWith);\n  float yCount;\n  if(yBlockCount <= 0.0) {\n    yCount = 1.0;\n  } else {\n    yCount = yBlockCount;\n  }\n  float blockHeight = 1.0 / yCount;\n  float bolckYIndex = floor(v_uv0.y / blockHeight);\n  return vec2(blockWith * (bolckXIndex + 0.5),blockHeight * (bolckYIndex +0.5));\n}\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  vec2 realPos = v_uv0;\n  #if USE_MOSAIC\n  realPos = getUvMapPos();\n  #endif\n  #if USE_TEXTURE\n  vec4 texture_tmp = texture2D(texture, realPos);\n  #if CC_USE_ALPHA_ATLAS_texture\n      texture_tmp.a *= texture2D(texture, realPos + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    o.rgb *= (texture_tmp.rgb * texture_tmp.rgb);\n    o.a *= texture_tmp.a;\n  #else\n    o *= texture_tmp;\n  #endif\n  #endif\n  o *= v_color;\n  ALPHA_TEST(o);\n  gl_FragColor = o;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"USE_MOSAIC","type":"boolean","defines":[]},{"name":"CC_USE_ALPHA_ATLAS_texture","type":"boolean","defines":["USE_TEXTURE"]},{"name":"INPUT_IS_GAMMA","type":"boolean","defines":["USE_TEXTURE"]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"Mosaic","binding":1,"members":[{"name":"xBlockCount","type":13,"count":1},{"name":"yBlockCount","type":13,"count":1}],"defines":["USE_MOSAIC"]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"mosaic|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.5]},"xBlockCount":{"type":13,"value":[100],"editor":{"tooltip":"X轴方向上马赛克方块数量","range":[1,100]}},"yBlockCount":{"type":13,"value":[100],"editor":{"tooltip":"Y轴方向上马赛克方块数量","range":[1,100]}}}}]}]]],0,0,[],[],[]],[[{"name":"default_btn_disabled","rect":[0,0,40,40],"offset":[0,0],"originalSize":[40,40],"capInsets":[12,12,12,12]}],[0],0,[0],[1],[5]],[[{"name":"default_scrollbar","rect":[0,0,30,15],"offset":[0,0],"originalSize":[30,15],"capInsets":[10,4,10,4]}],[0],0,[0],[1],[6]],[[{"name":"default_sprite_splash","rect":[0,0,2,2],"offset":[0,0],"originalSize":[2,2],"capInsets":[0,0,0,0]}],[0],0,[0],[1],[7]],[[{"name":"default_radio_button_off","rect":[3,3,26,26],"offset":[0,0],"originalSize":[32,32],"capInsets":[0,0,0,0]}],[0],0,[0],[1],[8]],[[{"name":"default_btn_pressed","rect":[0,0,40,40],"offset":[0,0],"originalSize":[40,40],"capInsets":[12,12,12,12]}],[0],0,[0],[1],[9]],[[{"name":"default_btn_normal","rect":[0,0,40,40],"offset":[0,0],"originalSize":[40,40],"capInsets":[12,12,12,12]}],[0],0,[0],[1],[10]],[[[4,"mosaic",null],[5,"Canvas","a5esZu+45LA5mBpvttspPD",[-7,-8,-9,-10,-11,-12],[[14,-1],[15,45,-2],[17,-6,-5,-4,-3]],[5,960,640],[480,320,0,0,0,0,1,1,1,1]],[6,"Background",512,[-15],[[0,1,0,-13,[9],10],[16,0,45,100,40,-14]],[5,100,40]],[12,"slider",1,[-17,-18],[-16],[5,300,20],[0,-229.687,0,0,0,0,1,1,1,1]],[13,"Handle",512,3,[[[0,1,2,-19,[6],7],-20],4,1],[5,32,32],[150,0,0,0,0,0,1,1,1,0]],[7,"backHome",1,[2],[[20,2,-21,[4,4293322470],[4,4291348680],[4,3363338360],2,11,12,13,14]],[5,100,40],[394.88,-271.551,0,0,0,0,1,1,1,1]],[22,"New Node",[1],[0,0,0],[0,0,0,0,0,0,1,1,1,1]],[8,"Main Camera",1,[[23,7,-1,-22]],[5,960,640],[0,0,524.8028171012757,0,0,0,1,1,1,1]],[9,"background",1,[[18,0,-23,[0],1]],[4,4281743044],[5,960,640]],[1,"img",1,[-24],[5,576,360],[-11.702,40.212,0,0,0,0,1,1,1,1]],[19,0,9,[2]],[1,"tip",1,[-25],[5,640.1,50.4],[0,-174.245,0,0,0,0,1,1,1,1]],[24,"X、Y轴方向上马赛克方块数量：100",1,1,11,[3]],[10,"Background",512,3,[[0,1,0,-26,[4],5]],[5,300,20]],[21,1.1,true,3,4,[4,4294967295],[4,4294967295],4],[26,1,3,14],[11,"Label",512,2,[[25,"Home",20,false,1,1,1,1,-27,[8]]],[4,4278190080],[5,100,40]]],0,[0,0,1,0,0,1,0,9,15,0,10,12,0,11,10,0,0,1,0,-1,7,0,-2,8,0,-3,9,0,-4,11,0,-5,3,0,-6,5,0,0,2,0,0,2,0,-1,16,0,-1,15,0,-1,13,0,-2,4,0,0,4,0,-2,14,0,0,5,0,0,7,0,0,8,0,-1,10,0,-1,12,0,0,13,0,0,16,0,12,6,1,3,6,2,3,5,27],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,14,14,14,14,14],[-1,2,-1,-1,-1,2,-1,2,-1,-1,2,4,5,6,7,2,13,4,5,6,7],[0,11,12,0,0,13,0,1,0,0,2,2,14,2,3,15,0,1,1,1,3]],[[{"name":"timg","rect":[0,0,1920,1200],"offset":[0,0],"originalSize":[1920,1200],"capInsets":[0,0,0,0]}],[0],0,[0],[1],[16]]]]